local _math = {}
-------------------------------------------------------------------------require
--------------------------------------------------------------------------config
---------------------------------------------------------------------------local


--______________________________________________________________________________________________________________________
--############################################################################## VECTOR OPERATIONS #####################

--****************************************************************************** Vector sum
function _math.vector_sum( v1, v2 )
    if not v1 or not v2 then return nil end
    return {
        x = v1.x + v2.x,
        y = v1.y + v2.y
    }
end

--****************************************************************************** Vector difference
function _math.vector_diff( v1, v2 )
    if not v1 or not v2 then return nil end
    return {
        x = v1.x - v2.x,
        y = v1.y - v2.y
    }
end

--******************************************************************************

--______________________________________________________________________________________________________________________
--############################################################################## BOX OPERATIONS ########################

--****************************************************************************** Box scale
function _math.box_scale( oldBox, scale )
    if not oldBox or not scale then return nil end
    local newBox = {}
    for k, v in ipairs( oldBox ) do
        local n = {}
        for kk, vv in ipairs( v ) do
            n[ kk ] = vv * scale
        end
        newBox[ k ] = n
    end
    return newBox
end

--******************************************************************************

--######################################################################################################################

return _math